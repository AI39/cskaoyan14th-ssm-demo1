<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan14th.mapper.MaterialReceiveMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan14th.bean.MaterialReceive">
    <id column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="material_id" jdbcType="VARCHAR" property="materialId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="receive_date" jdbcType="TIMESTAMP" property="receiveDate" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    receive_id, material_id, amount, receive_date, sender, receiver, note
  </sql>
  <select id="selectByExample" parameterType="com.cskaoyan14th.bean.MaterialReceiveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material_receive
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from material_receive
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cskaoyan14th.bean.MaterialReceiveExample">
    delete from material_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cskaoyan14th.bean.MaterialReceive">
    insert into material_receive (receive_id, material_id, amount, 
      receive_date, sender, receiver, 
      note)
    values (#{receiveId,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{receiveDate,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan14th.bean.MaterialReceive">
    insert into material_receive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan14th.bean.MaterialReceiveExample" resultType="java.lang.Long">
    select count(*) from material_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material_receive
    <set>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null">
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material_receive
    set receive_id = #{record.receiveId,jdbcType=VARCHAR},
      material_id = #{record.materialId,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      receive_date = #{record.receiveDate,jdbcType=TIMESTAMP},
      sender = #{record.sender,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan14th.bean.MaterialReceive">
    update material_receive
    <set>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan14th.bean.MaterialReceive">
    update material_receive
    set material_id = #{materialId,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      receive_date = #{receiveDate,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where receive_id = #{receiveId,jdbcType=VARCHAR}
  </update>

  <!--上面是逆向工程自动生成的，下面是自己手动添加的-->

  <resultMap id="receiveMap" type="com.cskaoyan14th.bean.MaterialReceive">
    <result column="receive_id" property="receiveId"/>
    <result column="amount" property="amount"/>
    <result column="receive_date" property="receiveDate"/>
    <result column="sender" property="sender"/>
    <result column="receiver" property="receiver"/>
    <result column="note" property="note"/>
    <association property="material" javaType="com.cskaoyan14th.bean.Material">
      <result column="material_id" property="materialId"/>
      <result column="matetial_type" property="materialType"/>
      <result column="status" property="status"/>
      <result column="remaining" property="remaining"/>
      <result column="note" property="note"/>
    </association>
  </resultMap>
  <select id="selectMaterialReceive" resultMap="receiveMap">
    select
    t1.receive_id,
    t1.amount,
    t1.receive_date,
    t1.sender,
    t1.receiver,
    t1.note,
    t2.material_id,
    t2.material_type,
    t2.status,
    t2.remaining,
    t2.note
    from material_receive t1
    left join
    material t2
    on t1.material_id=t2.material_id
  </select>

  <select id="selectMaterialReceiveByReceiveId" resultMap="receiveMap">
    select
    t1.receive_id,
    t1.amount,
    t1.receive_date,
    t1.sender,
    t1.receiver,
    t1.note,
    t2.material_id,
    t2.material_type,
    t2.status,
    t2.remaining,
    t2.note
    from material_receive t1
    left join
    material t2
    on t1.material_id=t2.material_id
    where t1.receive_id like #{receiveid}
  </select>

  <select id="selectMaterialReceiveByMaterialId" resultMap="receiveMap">
    select
    t1.receive_id,
    t1.amount,
    t1.receive_date,
    t1.sender,
    t1.receiver,
    t1.note,
    t2.material_id,
    t2.material_type,
    t2.status,
    t2.remaining,
    t2.note
    from material_receive t1
    left join
    material t2
    on t1.material_id=t2.material_id
    where t2.material_id like #{materialid}
  </select>


</mapper>